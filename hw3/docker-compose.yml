name: kafka
services:
  broker:
    container_name: broker
    hostname: broker
    # image: apache/kafka:3.7.0
    image: apache/kafka:3.9.1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: DOCKER://broker:19092,HOST://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: DOCKER://broker:19092,HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - 19092:19092
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - kafka-cluster


  producer:
    container_name: producer
    image: producer:latest
    build:
      context: producer/
    volumes:
      - ./producer/data:/app/data
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - kafka-cluster


  streams:
    container_name: streams
    image: streams:latest
    build:
      context: streams/
    ports:
      - 6066:6066
    depends_on:
      - producer
    networks:
      - kafka-cluster


networks:
  kafka-cluster:
    name: kafka-cluster
